import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
      GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get april => "Avril";
  String get august => "Aout";
  String get btn_to_be_paid => "Payer";
  String get btn_add_payment => "Paiement";
  String get btn_update_grievance => "Update";
  String get btn_add_grievance => "Plainte";
  String get btn_save_grievance => "Enregistrer";
  String get btn_cancel_grievance => "Annuler";
  String get btn_delete_grievance => "Supprimer";
  String get btn_save_payment => "Enregistrer";
  String get btn_scan => "Scan";
  String get btn_load_data => "Load";
  String get btn_clean_data => "Clean";
  String get btn_book_appointment => "Book Appointment";
  String get btn_book_now => "Book Now";
  String get btn_buy_now => "Buy Now";
  String get btn_cancel => "Cancel";
  String get btn_cancel_appointment => "Cancel Appointment";
  String get btn_delete => "Delete";
  String get btn_done => "Done";
  String get btn_find => "find";
  String get btn_get_started => "get started";
  String get btn_navigation_skip => "Skip";
  String get btn_next => "next";
  String get btn_remember_me => "remember me";
  String get btn_reply => "Reply";
  String get btn_send_email => "send email";
  String get btn_sign_in => "Se connecter";
  String get btn_sign_in_facebook => "sign in with facebook";
  String get btn_sign_up => "Se deconnecter";
  String get btn_sign_up_facebook => "sign up with facebook";
  String get btn_submit => "submit";
  String get content_delete_doctor_first => "Do you want delete doctor ";
  String get content_delete_doctor_second => " on list?";
  String get content_news =>
      "A healthy lifestyle can help people with various disorders and diseases better control them, gaining a better quality of life. High blood pressure is one the diseases that can be better controlled with a healthy lifestyle. \n\nIn some people, a healthy lifestyle \nCan prevent high blood pressure from developing. Many of us have heard over and over to “lose weight and get more exercise” because it will help a person to maintain better health. \n\nMaintaining a healthy weight and exercising regularly can do a lot to help prevent and control high blood pressure. High blood pressure and a high weight are closely related. Being overweight significantly raises a person’s risk of developing high blood pressure. An overweight person raises their risk by as much as six times. But, as a person starts to take the extra pounds off, their blood pressure typically goes down too. Try to eat more fruits, vegetables, whole grains, low-fat dairy products, and lean protein.  Exercise is another important factor in preventing and controlling high blood pressure (http://www.gothypertension.com/managing/highbloodpressureandexercise). Exercising makes the heart stronger and enables it to pump blood throughout the body with less effort. The easier it is for the heart to pump blood, the easier it is on the arteries. Regular physical activity helps a person reach and maintain a healthy weight. The latest federal guidelines suggest a person engage in moderate physical activity 30-60 minutes a day, 5-7 days a week. Walking is a good physical activity, especially for people just starting an exercise routine. Swimming, biking, and jogging are also great forms of exercise. In addition, federal guidelines suggest a person engage in vigorous physical activities, such as strength training, three times a week for at least 20 minutes each time.  Smoking is hard on the heart and nicotine cases the blood vessels to constrict, narrowing the blood vessels and making the heart work harder to pump blood through the body. Smoking also interferes with some blood pressure medications, making them much less effective. Quitting smoking reduces the risk for high blood pressure, will help to control existing high blood pressure, and will also reduce a person’s risk of developing lung cancer, heart disease, and having a stroke. Quitting smoking is very difficult, possibly the hardest thing a person will ever do, but doing so goes a long way towards improving a person’s health. \n\nAvoiding excessive sodium is suggested to help control and prevent high blood pressure, although there has been controversy in recent years about whether or not reducing sodium intake will have much of an effect on blood pressure. It may not have a big impact, but even a small reduction in sodium can have a positive effect on a person’s health. Take any prescribed high blood pressure medications as directed – don’t skip doses or quit taking it entirely. If, after being on medication for a period of time blood pressure returns to normal levels, it does not mean that person’s blood pressure has become normal. It means the medication is doing its job and is controlling the blood pressure. Blood pressure medication needs to be taking indefinitely, often for life. Avoid excessive alcohol consumption. Not only can it cause high blood pressure, it’s also bad for the liver and kidneys. Although studies have not proven whether or not caffeine affects high blood pressure, some studies have shown that people who regularly consume caffeine each day have higher blood pressure than people who don’t. On the other hand, some studies have shown that people eventually develop a tolerance to caffeine and that it then no longer affects their blood pressure. As a precautionary measure, physicians will usually advice patients with high blood pressure to limit their caffeine intake. Word count: 623\n\nIncoming search terms:free plr articles on high blood pressure     \t";
  String get december => "December";
  String get des_forgot_password =>
      "We just need your registered Email to  send you password reset intruction";
  String get desc_intro1 =>
      "Consultation offline des dossiers des beneficiaires contenant les informations biographiques, demographiques et de prestations";
  String get desc_intro2 =>
      "Suivi offline des prestations (transfert monetaire, coupon alimentaire, coupon restauration...)";
  String get desc_intro3 => "Enregistrement et Suivi offline des plaintes";
  String get desc_intro4 => "Mesures d'accompagnement...";
  String get february => "February";
  String get gender_female => "FEMALE";
  String get gender_khac => "OTHER";
  String get gender_male => "MALE";
  String get gender_sercet => "SERCET";
  String get hint_input_grievance_category => "Plainte - Sous Categorie";
  String get hint_input_grievance_type => "Plainte - Category";
  String get hint_input_grievance_description => "Description";
  String get hint_appearance => "Appearance";
  String get hint_choose_hospital => "Choose Hospital";
  String get hint_date => "Date";
  String get hint_doctor => "Doctor";
  String get hint_dosage => "Dosage";
  String get hint_information => "Information";
  String get hint_input_birthday => "Birthday";
  String get hint_input_email => "E-Mail";
  String get hint_input_fullname => "Fullname";
  String get hint_input_gender => "Gender";
  String get hint_input_height => "Height";
  String get hint_input_password => "Password";
  String get hint_input_username => "Username";
  String get hint_input_weight => "Weight";
  String get hint_medication_name => "Medication Name";
  String get hint_time => "Time";
  String get hint_type_something => "Type something";
  String get hint_unit => "Unit";
  String get hint_program => 'Programme';
  String get hint_project => 'Projet';
  String get hint_phase => 'Phase Intervention';
  String get hint_district => 'District';
  String get hint_site => 'Site';
  String get hint_beneficiary_name => 'Recipiendaire Name';
  String get january => "Janvier";
  String get july => "Juillet";
  String get june => "Juin";
  String get lbl_about => "Household Detail";
  String get lbl_address_timing => "Localization";
  String get lbl_appointment => "Appointment";
  String get lbl_basic => "Basic";
  String get lbl_calling => "Calling...";
  String get lbl_certificate => "Documents";
  String get lbl_date_effective => "Date Effective";
  String get lbl_date_transaction => "Transaction Date";
  String get lbl_doctor_near => " doctors near ";
  String get lbl_dont_have_account => "Don't have an account?";

  String get lbl_drugs_az => "Drugs A-Z";
  String get lbl_drugs_list => "Drugs List";
  String get lbl_drugs_shop => "Drugs Shop";

  String get lbl_beneficiary_payment_transaction => "Prestations";
  String get lbl_beneficiary_grievance_transaction => "Plaintes";
  String get lbl_beneficiary_productivemeasure_transaction => "Mesures productives";

  String get lbl_enrollee_id => "Recipient ID";
  String get lbl_find_doctor => "Find Doctor";
  String get lbl_find_hospital => "Find Hospital";
  String get lbl_find_beneficiary => "Rechercher Beneficiaire";
  String get lbl_found => "Found ";
  String get lbl_fullname => "Fullname";
  String get lbl_group => "Group #";
  String get lbl_have_account => "Have an account?";
  String get lbl_hospital_near => " hospital near ";
  String get lbl_need_medicines => "What you want to do?";
  String get lbl_per_month => "Per Month";
  String get lbl_personal_information => "Personal Information";
  String get lbl_phone => "Phone";
  String get lbl_plan => "Plan";
  String get lbl_premium => "Premium";
  String get lbl_price_services => "Price Services";
  String get lbl_pro => "Pro";
  String get lbl_reminder => "Reminder";
  String get lbl_reviewer => "Reviewer";
  String get lbl_shop_online => "Shop Online";
  String get lbl_take_care => "how can we take care yourself?";
  String get lbl_total_goal => "Total Goal";
  String get lbl_unit_cm => "CM";
  String get lbl_unit_inch => "INCH";
  String get lbl_unit_kg => "KG";
  String get lbl_unit_lb => "LB";
  String get lbl_working_address => "Working address";
  String get lbl_your_birthday => "your birthday";
  String get lbl_your_gender => "your gender";
  String get lbl_your_height => "your height";
  String get lbl_your_name => "your name";
  String get lbl_your_weight => "your weight";
  String get lbl_loading_parameter => "Enter Data";
  String get lbl_select_program => "Select a program";
  String get lbl_select_project => "Select a project";
  String get lbl_select_phase => "Select an intervention phase";
  String get lbl_select_district => "Select a district";
  String get lbl_select_site => "Select a site";
  String get lbl_transaction_amount => "Amount";
  String get lbl_period_benefit => "Periode Prestation";
  String get lbl_add_grievance => "Ajouter Plainte";
  String get lbl_add_payment => "Ajouter Paiement";
  String get lbl_add_beneficiary => "Ajouter Beneficiaire";
  String get lbl_add_measure => "Ajouter Mesure";
  String get march => "Mars";
  String get may => "Mai";

  String get menu_drugs => "DRUGS";
  String get menu_home => "HOME";
  String get menu_log_out => "LOG OUT";
  String get menu_news_healthly => "NEWS HEALTHLY";
  String get menu_profile => "PROFILE";
  String get menu_services => "SERVICES";
  String get november => "Novembre";
  String get october => "Octobre";
  String get september => "Septembre";
  String get title_add_drugs => "Add Drugs";
  String get title_add_grievances => "Add Grievance/Complaint";
  String get title_appointment => "Create Appointment";
  String get title_appointment_detail => "Appointment Details";
  String get title_book_appointment => "Book Appointment";
  String get title_bookmark => "Bookmark";
  String get title_calendar => "Calendar";
  String get title_comment => "Comment";
  String get title_create_account => "Create An Account";
  String get title_delete_doctor => "Delete Doctor";
  String get title_doctors => "Doctors";
  String get title_doctors_profiles => "Doctors Profiles";
  String get title_drugs => "Drugs";
  String get title_drugs_list => "Drugs List";
  String get title_find_doctor => "Find Doctor";
  String get title_find_beneficiary => "Find Beneficiary";
  String get title_find_hospital => "Find Hospital";
  String get title_forgot_password => "Forgot Password";
  String get title_goal => "Goal";
  String get title_goal_settings => "Goal Settings";
  String get title_hospital => "Hospital";
  String get title_information_beneficiary => "Information";
  String get title_insurrance => "Insurrance";
  String get title_intro1 => "Beneficiaires";
  String get title_intro2 => "Prestations";
  String get title_intro3 => "Plaintes";
  String get title_intro4 => "Accompagnement";
  String get title_maps => "Maps";
  String get title_notification => "Notification";
  String get title_price_service => "Price Table";
  String get title_result_find_doctor => "Doctors";
  String get title_result_find_hospital => "Hospital";
  String get title_sign_in => "sign in";
  String get title_sign_up => "sign up";
  String get title_test_indicators => "Test Indicators";
  String get title_user_profile => "User Profile";
  String get title_vouchers => "Scan";
  String get title_beneficiaries => "Liste des beneficiaires";
  String get title_loading => "Parametres";
  String get title_beneficiary_profile => "Fiche Beneficiaire";
  String get title_groupement_profile => "Fiche Groupement";
  String get title_beneficairies_payment => "Paiements";
  String get title_beneficairies_grievance => "Plaintes";
  String get title_payment_details => "Paiement Detail";
  String get title_module_beneficiaries => "Module Beneficiaire";
  String get title_history_transaction => "Liste des Transferts Monetaires";
  String get title_history_grievance => "Liste des Plaintes/Doleances";
  String get title_payment_dashboard => "Tableau de bord";
  String get title_beneficairies_productivemeasure => "Mesures productives";
  String get title_groupement_member => "Liste des membres";
  String get title_groupement_grant => "Liste des subventions";
  String get title_groupement_productive_activity => "Liste des activites productives";
  String content_delete_doctor(String doctor) =>
      "Do you want delete beneficiary $doctor on list?";
  String lbl_balance(String balance) => "Balance: \$$balance";
  String lbl_distance(String distance) => "$distance km way";
  String lbl_householdid(String householdid) => "ID Menage : $householdid";
  String lbl_individualid(String individualid) => "ID Individu : $individualid";
  String lbl_groupement_status(String status) => "Status : $status";
  String lbl_total_members(String total_members) => "Total Membres : $total_members";
  String lbl_hello(String name) => "Hello $name,";
  String lbl_number_appointment(String number) => "$number available";
  String lbl_number_doctor(String number) => "$number doctors";
  String lbl_number_drugs(String number) => "$number drugs";
  String lbl_number_hospital(String number) => "$number hospital";
  String lbl_number_of_book(String number) => "$number Book";
  String lbl_number_of_doctor(String number) => "$number Doctors";
  String lbl_number_of_free_exam(String number) => "$number Free Exams";
  String lbl_number_of_hours_call(String number) => "$number Hours Call";
  String lbl_number_reminder(String number) => "$number reminder";
  String lbl_number_services(String number) => "$number services";
  String lbl_price(String price) => "$price";
  String lbl_number_measures(String number) => "$number measures";
  String lbl_grievancetype(String categoryId) => "Category : $categoryId ";
  String lbl_grievancecategory(String subcategoryId) =>
      "Sub Category : $subcategoryId";

  //e-SPMIS
  String get lbl_voucher_subtitle_page => "Suivi Scan";
  String get lbl_voucher_title_page => "Gestion des coupons";
  String get lbl_total_payment => "Taux Paiement";
  String get menu_dashboard => "TABLEAU DE BORD";
  String get menu_payments => "PAIEMENT";
  String get menu_grievances => "PLAINTES";
  String get menu_vouchers => "COUPONS";
  String get menu_beneficiaires => "BENEFICIAIRES";
  String get menu_modules => "MODULES";
  String get menu_programmes => "PROGRAMMES";
  String get lbl_home_module => "Liste des modules";
  String get lbl_voucher_management => "Scan";
  String get lbl_payment_management => "Prestations";
  String get lbl_grievance_management => "Plaintes";
  String get lbl_monitoring_management => "Suivi";
  String get lbl_beneficiary_management => "Beneficiaires";
  String get lbl_historic_data => "Historique";
  String get lbl_payment_site => "site Paiement";
  String get lbl_payment_list => "Liste Paiement";
  String get lbl_payment_transaction => "Historique";
  String lbl_number_of_vouchers(String number) => "$number Coupons";
  String lbl_number_payment_site(String number) => "$number sites";
  String lbl_number_payment_list(String number) => "$number transactions";
  String lbl_number_payment_transaction(String number) =>
      "$number Transcations";
  String lbl_number_grievances(String number) => "$number plaintes";
  String lbl_number_beneficiaries(String number) => "$number menages";
  String lbl_number_modules(String number) => "$number Modules";
  String lbl_number_setup(String number) => "$number Parametres";
  String lbl_number_vouchers_transaction(String number) => "$number Scan";
  String get lbl_voucher_nfc => "Carte NFC";
  String get lbl_voucher_barcode => "Barcode/QR Code";
  String get lbl_voucher_history => "Historique";
  String get lbl_productive_measures_management => "Mesures productives";
  String get lbl_setup_management => "Parametres";
  String get lbl_groupement_ip => 'Groupements';
  String get lbl_subvention_ip => 'Subventions';
  String get lbl_activity_ip => 'Activites productives';
  String get lbl_training_ip => 'Formations';
  String lbl_number_groupement_ip(String number) => "$number groupements";
  String lbl_number_subvention_ip(String number) => "$number subventions";
  String lbl_number_activity_ip(String number) => "$number activites productives";
  String lbl_number_training_ip(String number) => "$number formations";
  String get title_app => "e-SPMIS";
  String get lbl_groupement_label => "ID Groupement";
  String get lbl_type_groupement_label => "Type Groupement";
  String get lbl_date_adhesion_groupement => "Date Adhesion";
  String get lbl_statut_membership_groupement => "Statut Adhesion";
  String get btn_membership_to_be_updated => "Actualiser";
  String get lbl_subvention_label => "ID Subvention";
  String get lbl_type_subvention_label => "Type Subvention";
  String get lbl_date_octroi_subvention => "Date Octroi";
  String get lbl_montant_subvention => "Montant Subvention";
  String get btn_subvention_to_be_updated => "Actualiser";
  String get lbl_activity_productive_label => "ID Activite";
  String get lbl_nature_activity_productive_label => "Nature Activite";
  String get lbl_type_activity_productive => "Type Activity";
  String get lbl_montant_investi => "Montant Subvention";
  String get lbl_suivi_groupement => "Suivi Groupement";
  String get btn_productive_activity_to_be_updated => "Actualiser";
  String get btn_suivi => "Actualiser";
}

class $en extends S {
  const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("en", ""),
    ];
  }

  LocaleListResolutionCallback listResolution(
      {Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution(
      {Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "en":
          return SynchronousFuture<S>(const $en());
        default:
        // NO-OP.
      }
    }
    return SynchronousFuture<S>(const S());
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported,
      bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry &&
            (supportedLocale.countryCode == null ||
                supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
    ? null
    : l.countryCode != null && l.countryCode.isEmpty
        ? l.languageCode
        : l.toString();
